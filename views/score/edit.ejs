<script>
      'use strict';
      window.onload = function() {
      angular.module('myApp',['ngRoute'])
          .controller('scoreCtrl', function ($scope) {
      var initialServerData = <%if(score.measures.length) { %> <%- JSON.stringify(score.measures) %> <% } else { %> [] <% } %>;
      var serverMeasures = initialServerData.sort(function(a,b) { return a.measureNumber - b.measureNumber}).map(function(a){ return a.measureValue});
      
      $scope.tune = {
        // investigate the weird apostrophe stuff (might involve changing %= to %- 
        title: '<%=score.name%>',
        tempo: <%=score.tempo%>,
        key:   '<%=score.key%>',
        time:  '<%=score.time%>',
        measures : serverMeasures
      }
    
      $scope.abcTune = "T:"+$scope.tune.title+
                       "\nM:"+$scope.tune.time+
                       "\nL:1/8"+
                       "\nK:"+$scope.tune.key + "\n|" + $scope.tune.measures.join("|") + "|";
      
      console.log($scope.abcTune);
      $scope.measureNumber = 0;
      $scope.measureValue = new String("");
      $scope.selected = "create";
      
      io.socket.on('connect', function() {
      io.socket.get('/score/joinRoom/'+<%=score.id%>, function(resData, jwres) {console.log(resData);});
      if (!io.socket.alreadyListeningToMeasures) {
        io.socket.alreadyListeningToMeasures = true;
        io.socket.on('message', function onServerSentEvent (msg) {
    	  console.log(msg);
          // Let's see what the server has to say...
          switch(msg.verb) {
    
            case 'created':
              $scope.tune.measures.push(msg.measure.measureValue);
              $scope.abcTune = "T:"+$scope.tune.title+
                       "\nM:"+$scope.tune.time+
                       "\nL:1/8"+
                       "\nK:"+$scope.tune.key + "\n|" + $scope.tune.measures.join("|") + "|";
              $scope.$apply(); 
              // (re-render)
              break;
    		    case 'updated':
    		      $scope.tune.measures[msg.measure.measureNumber-1] = msg.measure.measureValue;
    		      $scope.abcTune = "T:"+$scope.tune.title+
                       "\nM:"+$scope.tune.time+
                       "\nL:1/8"+
                       "\nK:"+$scope.tune.key + "\n|" + $scope.tune.measures.join("|") + "|";
    		      $scope.$apply();
    			    // handle update
    			    
    			    break;
    			  case 'destroyed':
    			    $scope.tune.measures.splice(msg.measureNumber-1,1);
    			    $scope.abcTune = "T:"+$scope.tune.title+
                       "\nM:"+$scope.tune.time+
                       "\nL:1/8"+
                       "\nK:"+$scope.tune.key + "\n|" + $scope.tune.measures.join("|") + "|";
              $scope.$apply();
    			    break;
            default: return; // ignore any unrecognized messages
          }
        });
      }
    });
      
      $scope.kickoff = function() {
        console.log($scope.selected);
        switch($scope.selected) {
          case "create":
            $scope.create();
            break;
          case "update":
            $scope.update();
            break;
          case "destroy":
            $scope.destroy();
            break;
        }
        
      }
      $scope.update = function() {
      	io.socket.post('/measure/update', {owner: <%=score.id%>, measureNumber: $scope.measureNumber, measureValue: $scope.measureValue }, function (resData, jwRes) {
    	  });
    
      }
      $scope.create = function() {
      	io.socket.post('/measure/create', {owner: <%=score.id%>, measureNumber: $scope.tune.measures.length, measureValue: $scope.measureValue}, function (resData, jwRes) {
      	});
      }
      $scope.destroy = function() {
        io.socket.post('/measure/destroy', {owner: <%=score.id%>, measureNumber: $scope.measureNumber, measureValue: $scope.measureValue}, function(resData, jwRes) {
        });
      };
    });
    
   //var abc_editor = new ABCJS.Editor("abc", { paper_id: "paper0", midi_id:"midi", warnings_id:"warnings" });

    
  };
</script>

<div ng-app="myApp" ng-controller="scoreCtrl">
<textarea name="abc" id="abc" cols="80" rows="15" ng-bind="abcTune"></textarea>
<div id="midi"></div>
<div id="warnings"></div>
<div id="music"></div>
<div id="paper0"></div>
<div id="paper1"></div>
<div id="paper2"></div>
<div id="paper3"></div>
  <input type="radio" ng-model="selected" name="action" value="create">
  <input type="radio" ng-model="selected" name="action" value="update">
  <input type="radio" ng-model="selected" name="action" value="destroy">


  <input type="number" ng-disabled="selected==='create'" ng-model="measureNumber" required>
  <input type="text" ng-model="measureValue" required>
  <button ng-click="kickoff()">Go</button>
</div>